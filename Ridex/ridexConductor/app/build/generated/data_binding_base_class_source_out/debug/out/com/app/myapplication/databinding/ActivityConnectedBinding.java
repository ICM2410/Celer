// Generated by view binder compiler. Do not edit!
package com.app.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityConnectedBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnBack;

  @NonNull
  public final Button button2;

  @NonNull
  public final ImageView imageView17;

  @NonNull
  public final ImageButton perfil;

  @NonNull
  public final Button slideup;

  private ActivityConnectedBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnBack,
      @NonNull Button button2, @NonNull ImageView imageView17, @NonNull ImageButton perfil,
      @NonNull Button slideup) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.button2 = button2;
    this.imageView17 = imageView17;
    this.perfil = perfil;
    this.slideup = slideup;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityConnectedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityConnectedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_connected, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityConnectedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      Button btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.button2;
      Button button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.imageView17;
      ImageView imageView17 = ViewBindings.findChildViewById(rootView, id);
      if (imageView17 == null) {
        break missingId;
      }

      id = R.id.perfil;
      ImageButton perfil = ViewBindings.findChildViewById(rootView, id);
      if (perfil == null) {
        break missingId;
      }

      id = R.id.slideup;
      Button slideup = ViewBindings.findChildViewById(rootView, id);
      if (slideup == null) {
        break missingId;
      }

      return new ActivityConnectedBinding((ConstraintLayout) rootView, btnBack, button2,
          imageView17, perfil, slideup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
