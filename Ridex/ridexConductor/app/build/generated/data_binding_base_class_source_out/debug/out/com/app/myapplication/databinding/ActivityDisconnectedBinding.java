// Generated by view binder compiler. Do not edit!
package com.app.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDisconnectedBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout btnConfig;

  @NonNull
  public final Button btnConnect;

  @NonNull
  public final Button btnDisconnect;

  @NonNull
  public final LinearLayout btnHistorial;

  @NonNull
  public final LinearLayout btnHome;

  @NonNull
  public final Button btnLogout;

  @NonNull
  public final LinearLayout btnProfile;

  @NonNull
  public final LinearLayout btnWallet;

  @NonNull
  public final LinearLayout linearLayout13;

  private ActivityDisconnectedBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout btnConfig, @NonNull Button btnConnect, @NonNull Button btnDisconnect,
      @NonNull LinearLayout btnHistorial, @NonNull LinearLayout btnHome, @NonNull Button btnLogout,
      @NonNull LinearLayout btnProfile, @NonNull LinearLayout btnWallet,
      @NonNull LinearLayout linearLayout13) {
    this.rootView = rootView;
    this.btnConfig = btnConfig;
    this.btnConnect = btnConnect;
    this.btnDisconnect = btnDisconnect;
    this.btnHistorial = btnHistorial;
    this.btnHome = btnHome;
    this.btnLogout = btnLogout;
    this.btnProfile = btnProfile;
    this.btnWallet = btnWallet;
    this.linearLayout13 = linearLayout13;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDisconnectedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDisconnectedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_disconnected, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDisconnectedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnConfig;
      LinearLayout btnConfig = ViewBindings.findChildViewById(rootView, id);
      if (btnConfig == null) {
        break missingId;
      }

      id = R.id.btnConnect;
      Button btnConnect = ViewBindings.findChildViewById(rootView, id);
      if (btnConnect == null) {
        break missingId;
      }

      id = R.id.btnDisconnect;
      Button btnDisconnect = ViewBindings.findChildViewById(rootView, id);
      if (btnDisconnect == null) {
        break missingId;
      }

      id = R.id.btnHistorial;
      LinearLayout btnHistorial = ViewBindings.findChildViewById(rootView, id);
      if (btnHistorial == null) {
        break missingId;
      }

      id = R.id.btn_home;
      LinearLayout btnHome = ViewBindings.findChildViewById(rootView, id);
      if (btnHome == null) {
        break missingId;
      }

      id = R.id.btnLogout;
      Button btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.btnProfile;
      LinearLayout btnProfile = ViewBindings.findChildViewById(rootView, id);
      if (btnProfile == null) {
        break missingId;
      }

      id = R.id.btnWallet;
      LinearLayout btnWallet = ViewBindings.findChildViewById(rootView, id);
      if (btnWallet == null) {
        break missingId;
      }

      id = R.id.linearLayout13;
      LinearLayout linearLayout13 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout13 == null) {
        break missingId;
      }

      return new ActivityDisconnectedBinding((ConstraintLayout) rootView, btnConfig, btnConnect,
          btnDisconnect, btnHistorial, btnHome, btnLogout, btnProfile, btnWallet, linearLayout13);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
